const questions = [
  // HTML Questions
  {
    question: "What does HTML stand for?",
    option1: "Hyper Trainer Marking Language",
    option2: "Hyper Text Marketing Language",
    option3: "Hyper Text Markup Language",
    option4: "Hyper Text Markup Leveler",
    correctAnswer: 3,
  },
  {
    question: "Which HTML element is used for the largest heading?",
    option1: "<head>",
    option2: "<h1>",
    option3: "<heading>",
    option4: "<h6>",
    correctAnswer: 2,
  },
  {
    question: "What is the correct HTML element for inserting a line break?",
    option1: "<break>",
    option2: "<lb>",
    option3: "<br>",
    option4: "<b>",
    correctAnswer: 3,
  },
  {
    question: "Which HTML element is used to define an unordered list?",
    option1: "<ol>",
    option2: "<ul>",
    option3: "<li>",
    option4: "<list>",
    correctAnswer: 2,
  },
  {
    question: "What is the correct HTML element to define emphasized text?",
    option1: "<em>",
    option2: "<i>",
    option3: "<italic>",
    option4: "<b>",
    correctAnswer: 1,
  },
  {
    question:
      "Which attribute is used to provide an alternate text for an image, if the image cannot be displayed?",
    option1: "title",
    option2: "alt",
    option3: "src",
    option4: "longdesc",
    correctAnswer: 2,
  },
  {
    question:
      "Which HTML element is used to specify a footer for a document or section?",
    option1: "<footer>",
    option2: "<bottom>",
    option3: "<section>",
    option4: "<end>",
    correctAnswer: 1,
  },
  {
    question: "What is the purpose of the <meta> tag in HTML?",
    option1: "To link to external stylesheets",
    option2: "To store metadata about the HTML document",
    option3: "To create a navigation menu",
    option4: "To display images",
    correctAnswer: 2,
  },
  {
    question: "Which HTML attribute is used to define inline styles?",
    option1: "class",
    option2: "font",
    option3: "style",
    option4: "styles",
    correctAnswer: 3,
  },
  {
    question: "Which HTML tag is used to define a hyperlink?",
    option1: "<a>",
    option2: "<link>",
    option3: "<hyperlink>",
    option4: "<href>",
    correctAnswer: 1,
  },

  // CSS Questions
  {
    question: "What does CSS stand for?",
    option1: "Creative Style Sheets",
    option2: "Cascading Style Sheets",
    option3: "Colorful Style Sheets",
    option4: "Computer Style Sheets",
    correctAnswer: 2,
  },
  {
    question: "Which property is used to change the background color in CSS?",
    option1: "color",
    option2: "background-color",
    option3: "bgcolor",
    option4: "background",
    correctAnswer: 2,
  },
  {
    question: "How do you add a comment in CSS?",
    option1: "// this is a comment",
    option2: "' this is a comment",
    option3: "/* this is a comment */",
    option4: "<!-- this is a comment -->",
    correctAnswer: 3,
  },
  {
    question: "Which property is used to change the text color in CSS?",
    option1: "fgcolor",
    option2: "text-color",
    option3: "font-color",
    option4: "color",
    correctAnswer: 4,
  },
  {
    question: "How do you select an element with the id 'header' in CSS?",
    option1: ".header",
    option2: "#header",
    option3: "header",
    option4: "*header",
    correctAnswer: 2,
  },
  {
    question: "How do you select all p elements in a div element?",
    option1: "div p",
    option2: "div.p",
    option3: "div-p",
    option4: "div+p",
    correctAnswer: 1,
  },
  {
    question: "Which property is used to change the font of an element in CSS?",
    option1: "font-family",
    option2: "font-style",
    option3: "font-weight",
    option4: "font-text",
    correctAnswer: 1,
  },
  {
    question: "Which CSS property controls the text size?",
    option1: "font-size",
    option2: "text-size",
    option3: "font-height",
    option4: "text-style",
    correctAnswer: 1,
  },
  {
    question:
      "Which CSS property is used to create space between the element's border and inner content?",
    option1: "margin",
    option2: "padding",
    option3: "border",
    option4: "spacing",
    correctAnswer: 2,
  },
  {
    question: "Which property is used to align text to the center in CSS?",
    option1: "text-align: middle;",
    option2: "text-align: center;",
    option3: "text-align: justify;",
    option4: "text-align: align;",
    correctAnswer: 2,
  },

  // JavaScript Questions
  {
    question: "What is the correct syntax to create a JavaScript function?",
    option1: "function = myFunction()",
    option2: "function myFunction()",
    option3: "function:myFunction()",
    option4: "create function myFunction()",
    correctAnswer: 2,
  },
  {
    question: "How do you call a function named 'myFunction'?",
    option1: "call function myFunction()",
    option2: "myFunction()",
    option3: "call myFunction()",
    option4: "execute myFunction()",
    correctAnswer: 2,
  },
  {
    question: "How do you write a conditional statement in JavaScript?",
    option1: "if i == 5 then",
    option2: "if i = 5 then",
    option3: "if (i == 5)",
    option4: "if (i = 5)",
    correctAnswer: 3,
  },
  {
    question: "How do you add a comment in JavaScript?",
    option1: "// This is a comment",
    option2: "' This is a comment",
    option3: "<!-- This is a comment -->",
    option4: "/* This is a comment */",
    correctAnswer: 1,
  },
  {
    question: "What is the correct way to declare a variable in JavaScript?",
    option1: "var myVar;",
    option2: "v myVar;",
    option3: "variable myVar;",
    option4: "myVar var;",
    correctAnswer: 1,
  },
  {
    question: "Which operator is used to assign a value to a variable?",
    option1: "*",
    option2: "=",
    option3: "-",
    option4: "x",
    correctAnswer: 2,
  },
  {
    question: "Which event occurs when the user clicks on an HTML element?",
    option1: "onmouseover",
    option2: "onchange",
    option3: "onclick",
    option4: "onmouseclick",
    correctAnswer: 3,
  },
  {
    question: "What will the following code return: Boolean(10 > 9)",
    option1: "true",
    option2: "false",
    option3: "NaN",
    option4: "null",
    correctAnswer: 1,
  },
  {
    question: "How does a WHILE loop start?",
    option1: "while (i <= 10)",
    option2: "while i = 1 to 10",
    option3: "while (i <= 10; i++)",
    option4: "while (i > 10)",
    correctAnswer: 1,
  },
  {
    question: "How do you round the number 7.25 to the nearest integer?",
    option1: "Math.round(7.25)",
    option2: "Math.rnd(7.25)",
    option3: "round(7.25)",
    option4: "rnd(7.25)",
    correctAnswer: 1,
  },

  // React Questions
  {
    question: "What is React?",
    option1: "A JavaScript library for building user interfaces",
    option2: "A framework for building server-side applications",
    option3: "A library for managing databases",
    option4: "A tool for testing code",
    correctAnswer: 1,
  },
  {
    question: "How do you create a React component?",
    option1: "class MyComponent extends React.Component {}",
    option2: "function MyComponent() {}",
    option3: "const MyComponent = () => {}",
    option4: "All of the above",
    correctAnswer: 4,
  },
  {
    question: "What is JSX?",
    option1: "A syntax extension for JavaScript",
    option2: "A CSS preprocessor",
    option3: "A tool for managing state in React",
    option4: "A testing library for React",
    correctAnswer: 1,
  },
  {
    question: "How do you handle state in a React component?",
    option1: "Using the useState hook",
    option2: "Using the state property",
    option3: "Using the setState method",
    option4: "All of the above",
    correctAnswer: 4,
  },
  {
    question: "What is a React hook?",
    option1: "A function that lets you use state and other React features",
    option2: "A tool for styling React components",
    option3: "A library for making API requests",
    option4: "A tool for testing React applications",
    correctAnswer: 1,
  },
  {
    question:
      "Which hook would you use to perform a side effect in a functional component?",
    option1: "useEffect",
    option2: "useState",
    option3: "useReducer",
    option4: "useMemo",
    correctAnswer: 1,
  },
  {
    question: "What is the purpose of the useState hook in React?",
    option1: "To manage side effects",
    option2: "To manage component state",
    option3: "To manage the lifecycle of a component",
    option4: "To optimize performance",
    correctAnswer: 2,
  },
  {
    question:
      "How do you pass data from a parent component to a child component in React?",
    option1: "Using props",
    option2: "Using state",
    option3: "Using context",
    option4: "Using hooks",
    correctAnswer: 1,
  },
  {
    question: "What is the virtual DOM?",
    option1: "A lightweight copy of the actual DOM",
    option2: "A tool for managing application state",
    option3: "A library for making API requests",
    option4: "A testing library for React",
    correctAnswer: 1,
  },
  {
    question: "How do you create a context in React?",
    option1: "Using React.createContext()",
    option2: "Using React.createContextual()",
    option3: "Using React.createProvider()",
    option4: "Using React.createContextAPI()",
    correctAnswer: 1,
  },
  {
    question: "What is the purpose of the useEffect hook in React?",
    option1: "To manage component state",
    option2: "To perform side effects",
    option3: "To create context",
    option4: "To optimize performance",
    correctAnswer: 2,
  },
  {
    question: "How do you update the state of a component in React?",
    option1: "Using the setState function",
    option2: "Using the state function",
    option3: "Using the updateState function",
    option4: "Using the changeState function",
    correctAnswer: 1,
  },
  {
    question: "How do you handle events in React?",
    option1: "Using inline event handlers",
    option2: "Using the onEvent attributes",
    option3: "Using the addEventListener method",
    option4: "Using the event handler functions",
    correctAnswer: 4,
  },
  {
    question: "What is the use of the key prop in React?",
    option1: "To uniquely identify elements in a list",
    option2: "To manage component state",
    option3: "To handle events",
    option4: "To create context",
    correctAnswer: 1,
  },
  {
    question: "What is the use of the useCallback hook in React?",
    option1: "To return a memoized callback function",
    option2: "To manage component state",
    option3: "To create context",
    option4: "To perform side effects",
    correctAnswer: 1,
  },
  {
    question: "What is the difference between state and props in React?",
    option1:
      "State is managed within the component, while props are passed from parent to child",
    option2:
      "State is passed from parent to child, while props are managed within the component",
    option3: "State is immutable, while props are mutable",
    option4: "There is no difference between state and props",
    correctAnswer: 1,
  },
  {
    question: "How do you conditionally render elements in React?",
    option1: "Using the if statement",
    option2: "Using the switch statement",
    option3: "Using the ternary operator",
    option4: "All of the above",
    correctAnswer: 4,
  },
  {
    question: "How do you use the useReducer hook in React?",
    option1: "const [state, dispatch] = useReducer(reducer, initialState)",
    option2: "const [state, dispatch] = useReducer(initialState, reducer)",
    option3: "const [dispatch, state] = useReducer(reducer, initialState)",
    option4: "const [dispatch, state] = useReducer(initialState, reducer)",
    correctAnswer: 1,
  },
  {
    question: "What is the purpose of the useContext hook in React?",
    option1: "To manage component state",
    option2: "To access context values",
    option3: "To create context",
    option4: "To perform side effects",
    correctAnswer: 2,
  },
  {
    question: "What is the correct way to lift state up in React?",
    option1: "Move the state to the common ancestor component",
    option2: "Move the state to the child component",
    option3: "Move the state to the sibling component",
    option4: "Move the state to the parent component",
    correctAnswer: 1,
  },
  {
    question: "How do you create a ref in React?",
    option1: "Using React.createRef()",
    option2: "Using React.createRefHook()",
    option3: "Using React.createReference()",
    option4: "Using React.createHook()",
    correctAnswer: 1,
  },
  {
    question: "What is the purpose of the useRef hook in React?",
    option1: "To manage component state",
    option2: "To access and manipulate DOM elements",
    option3: "To create context",
    option4: "To perform side effects",
    correctAnswer: 2,
  },
  {
    question: "How do you prevent a default event in React?",
    option1: "event.preventDefault()",
    option2: "event.stopPropagation()",
    option3: "event.prevent()",
    option4: "event.stop()",
    correctAnswer: 1,
  },
  {
    question: "What is the use of the Fragment component in React?",
    option1:
      "To return multiple elements without adding extra nodes to the DOM",
    option2: "To manage component state",
    option3: "To handle events",
    option4: "To create context",
    correctAnswer: 1,
  },
  {
    question: "How do you pass a method to a child component in React?",
    option1: "Using props",
    option2: "Using state",
    option3: "Using context",
    option4: "Using hooks",
    correctAnswer: 1,
  },
  {
    question: "How do you render a list of elements in React?",
    option1: "Using the map method",
    option2: "Using the forEach method",
    option3: "Using the for loop",
    option4: "Using the while loop",
    correctAnswer: 1,
  },
  {
    question: "What is the purpose of the PureComponent in React?",
    option1: "To optimize performance by preventing unnecessary re-renders",
    option2: "To manage component state",
    option3: "To handle events",
    option4: "To create context",
    correctAnswer: 1,
  },
  {
    question: "How do you access props in a class component in React?",
    option1: "this.props",
    option2: "this.state",
    option3: "this.context",
    option4: "this.hooks",
    correctAnswer: 1,
  },
  {
    question: "How do you define default props in a React component?",
    option1: "Using the defaultProps property",
    option2: "Using the propTypes property",
    option3: "Using the static defaultProps property",
    option4: "Using the constructor",
    correctAnswer: 1,
  },
  {
    question: "What is the purpose of the React.memo function?",
    option1: "To memoize a component and prevent unnecessary re-renders",
    option2: "To manage component state",
    option3: "To handle events",
    option4: "To create context",
    correctAnswer: 1,
  },
];

export default questions;
